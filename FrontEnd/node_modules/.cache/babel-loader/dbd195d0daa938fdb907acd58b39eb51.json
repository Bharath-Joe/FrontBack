{"ast":null,"code":"var _jsxFileName = \"/home/bharath1121/CSC307/react-assignment1/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [person, setPerson] = useState({\n    name: '',\n    job: ''\n  });\n\n  function submitForm() {\n    props.handleSubmit(person);\n    setPerson({\n      name: '',\n      job: ''\n    });\n  }\n\n  /*#__PURE__*/\n  _jsxDEV(\"input\", {\n    type: \"button\",\n    value: \"Submit\",\n    onClick: submitForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: person.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"job\",\n      children: \"Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"job\",\n      id: \"job\",\n      value: person.job,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"CLMOY9rP3qrVdvPyEXK/w6ulEAY=\");\n\n_c = Form;\n\nfunction handleChange(event) {\n  const {\n    name,\n    value\n  } = event.target;\n  if (name === \"job\") setPerson({\n    name: person['name'],\n    job: value\n  });else setPerson({\n    name: value,\n    job: person['job']\n  });\n}\n\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/bharath1121/CSC307/react-assignment1/src/Form.js"],"names":["React","useState","Form","props","person","setPerson","name","job","submitForm","handleSubmit","handleChange","event","value","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CACjC;AAACK,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GADiC,CAApC;;AAGA,WAASC,UAAT,GAAsB;AACpBL,IAAAA,KAAK,CAACM,YAAN,CAAmBL,MAAnB;AACAC,IAAAA,SAAS,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE;AAAhB,KAAD,CAAT;AACD;;AACD;AAAA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA;;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,KAAK,EAAEJ,MAAM,CAACE,IAJhB;AAKE,MAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,EAAE,EAAC,KAHL;AAIE,MAAA,KAAK,EAAEN,MAAM,CAACG,GAJhB;AAKE,MAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5BQR,I;;KAAAA,I;;AA8BT,SAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAM;AAAEL,IAAAA,IAAF;AAAQM,IAAAA;AAAR,MAAkBD,KAAK,CAACE,MAA9B;AACA,MAAIP,IAAI,KAAK,KAAb,EACED,SAAS,CAAC;AAACC,IAAAA,IAAI,EAAEF,MAAM,CAAC,MAAD,CAAb;AAAuBG,IAAAA,GAAG,EAAEK;AAA5B,GAAD,CAAT,CADF,KAGGP,SAAS,CAAC;AAACC,IAAAA,IAAI,EAAEM,KAAP;AAAcL,IAAAA,GAAG,EAAEH,MAAM,CAAC,KAAD;AAAzB,GAAD,CAAT;AACN;;AACD,eAAeF,IAAf","sourcesContent":["import React, {useState} from 'react';\n\nfunction Form(props) {\n  const [person, setPerson] = useState(\n     {name: '', job: '',}\n  );\n  function submitForm() {\n    props.handleSubmit(person);\n    setPerson({name: '', job: ''});\n  }\n  <input type=\"button\" value=\"Submit\" onClick={submitForm} />\n  return (\n    <form>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        value={person.name}\n        onChange={handleChange} />\n      <label htmlFor=\"job\">Job</label>\n      <input\n        type=\"text\"\n        name=\"job\"\n        id=\"job\"\n        value={person.job}\n        onChange={handleChange} />\n    </form>\n);\n\n}\n\nfunction handleChange(event) {\n    const { name, value } = event.target;\n    if (name === \"job\")\n      setPerson({name: person['name'], job: value});\n    else     \n       setPerson({name: value, job: person['job']});\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}
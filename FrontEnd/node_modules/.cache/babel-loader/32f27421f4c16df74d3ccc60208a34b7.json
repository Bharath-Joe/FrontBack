{"ast":null,"code":"var _jsxFileName = \"/home/bharath1121/CSC307/FrontBack/FrontEnd/src/MyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result) setCharacters(result);\n    });\n  }, []);\n\n  function updateList(person) {\n    makePostCall(person).then(result => {\n      if (result) {\n        setCharacters(result.users_list);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      characterData: characters,\n      removeCharacter: removeOneCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: updateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  async function removeOneCharacter(index) {\n    //.then is to fetch the updated list and set the new list as result\n    makeDeleteCall(characters[index]['id']).then(result => {\n      if (result.status === 204) {\n        fetchAll().then(result => {\n          if (result) setCharacters(result);\n        });\n      }\n    });\n  }\n\n  async function fetchAll() {\n    try {\n      const response = await axios.get('http://localhost:5000/users');\n      return response.data.users_list;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n  async function makeDeleteCall(id) {\n    try {\n      const response = await axios.delete(\"http://localhost:5000/users/\" + id);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async function makePostCall(person) {\n    try {\n      const response = await axios.post('http://localhost:5000/users', person);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n}\n\n_s(MyApp, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/bharath1121/CSC307/FrontBack/FrontEnd/src/MyApp.js"],"names":["React","useState","useEffect","Table","Form","axios","MyApp","characters","setCharacters","fetchAll","then","result","updateList","person","makePostCall","users_list","removeOneCharacter","index","makeDeleteCall","status","response","get","data","error","console","log","id","delete","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,GAAGC,IAAX,CAAgBC,MAAM,IAAI;AACxB,UAAIA,MAAJ,EACEH,aAAa,CAACG,MAAD,CAAb;AACH,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAMA,WAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1BC,IAAAA,YAAY,CAACD,MAAD,CAAZ,CAAqBH,IAArB,CAA2BC,MAAM,IAAI;AACnC,UAAGA,MAAH,EAAU;AACRH,QAAAA,aAAa,CAACG,MAAM,CAACI,UAAR,CAAb;AACD;AACF,KAJD;AAKF;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAER,UAAtB;AAAkC,MAAA,eAAe,EAAES;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,iBAAeI,kBAAf,CAAkCC,KAAlC,EAAyC;AACvC;AACAC,IAAAA,cAAc,CAACX,UAAU,CAACU,KAAD,CAAV,CAAkB,IAAlB,CAAD,CAAd,CAAwCP,IAAxC,CAA6CC,MAAM,IAAI;AACvD,UAAIA,MAAM,CAACQ,MAAP,KAAkB,GAAtB,EAA0B;AACxBV,QAAAA,QAAQ,GAAGC,IAAX,CAAgBC,MAAM,IAAI;AACxB,cAAIA,MAAJ,EACEH,aAAa,CAACG,MAAD,CAAb;AACD,SAHH;AAIC;AACF,KAPD;AAQD;;AAGD,iBAAeF,QAAf,GAA0B;AACxB,QAAI;AACF,YAAMW,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,6BAAV,CAAvB;AACA,aAAOD,QAAQ,CAACE,IAAT,CAAcP,UAArB;AACD,KAHD,CAIA,OAAOQ,KAAP,EAAc;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACD;AACF;;AAGD,iBAAeL,cAAf,CAA8BQ,EAA9B,EAAkC;AAChC,QAAI;AACF,YAAMN,QAAQ,GAAG,MAAMf,KAAK,CAACsB,MAAN,CAAa,iCAAiCD,EAA9C,CAAvB;AACA,aAAON,QAAP;AACF,KAHA,CAID,OAAOG,KAAP,EAAc;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACF;AACD;;AAGD,iBAAeT,YAAf,CAA4BD,MAA5B,EAAmC;AACjC,QAAI;AACD,YAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACuB,IAAN,CAAW,6BAAX,EAA0Cf,MAA1C,CAAvB;AACA,aAAOO,QAAQ,CAACE,IAAhB;AACF,KAHD,CAIA,OAAOC,KAAP,EAAc;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACF;AACH;AACD;;GAvEQjB,K;;KAAAA,K;AAyET,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Table from './Table'\nimport Form from './Form';\nimport axios from 'axios';\n\nfunction MyApp() {\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result)\n        setCharacters(result);\n    });\n  }, []);\n  function updateList(person) { \n    makePostCall(person).then( result => {\n      if(result){\n        setCharacters(result.users_list);\n      }\n    });\n }\n  return (\n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\n      <Form handleSubmit={updateList} />\n    </div>\n  )\n\n\n  async function removeOneCharacter(index) {\n    //.then is to fetch the updated list and set the new list as result\n    makeDeleteCall(characters[index]['id']).then(result => {\n    if (result.status === 204){\n      fetchAll().then(result => {\n        if (result)\n          setCharacters(result);\n        });\n      }\n    })\n  }\n\n\n  async function fetchAll() {\n    try {\n      const response = await axios.get('http://localhost:5000/users');\n      return response.data.users_list;\n    }\n    catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n\n  async function makeDeleteCall(id) {\n    try {\n      const response = await axios.delete(\"http://localhost:5000/users/\" + id);\n      return response;\n   }\n   catch (error) {\n      console.log(error);\n      return false;\n   }\n  }\n\n\n  async function makePostCall(person){\n    try {\n       const response = await axios.post('http://localhost:5000/users', person);\n       return response.data;\n    }\n    catch (error) {\n       console.log(error);\n       return false;\n    }\n }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}
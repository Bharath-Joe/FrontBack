{"ast":null,"code":"var _jsxFileName = \"/home/bharath1121/CSC307/FrontBack/FrontEnd/src/MyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n\n  function updateList(person) {\n    setCharacters([...characters, person]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      characterData: characters,\n      removeCharacter: removeOneCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: updateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n\n  function removeOneCharacter(index) {\n    const updated = characters.filter((character, i) => {\n      return i !== index;\n    });\n    setCharacters(updated);\n  }\n\n  async function fetchAll() {\n    try {\n      const response = await axios.get('http://localhost:5000/users');\n      return response.data.users_list;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result) setCharacters(result);\n    });\n  }, []);\n}\n\n_s(MyApp, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/bharath1121/CSC307/FrontBack/FrontEnd/src/MyApp.js"],"names":["React","useState","useEffect","Table","Form","axios","MyApp","characters","setCharacters","updateList","person","removeOneCharacter","index","updated","filter","character","i","fetchAll","response","get","data","users_list","error","console","log","then","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AACF,WAASQ,UAAT,CAAoBC,MAApB,EAA4B;AACxBF,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBG,MAAhB,CAAD,CAAb;AACH;;AACC,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAEH,UAAtB;AAAkC,MAAA,eAAe,EAAEI;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;;AASF,WAASE,kBAAT,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,OAAO,GAAGN,UAAU,CAACO,MAAX,CAAkB,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAChD,aAAOA,CAAC,KAAKJ,KAAb;AACD,KAFa,CAAhB;AAGEJ,IAAAA,aAAa,CAACK,OAAD,CAAb;AACD;;AAEH,iBAAeI,QAAf,GAAyB;AACvB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,6BAAV,CAAvB;AACA,aAAOD,QAAQ,CAACE,IAAT,CAAcC,UAArB;AACD,KAHD,CAIA,OAAOC,KAAP,EAAa;AACX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACD;AACD;;AAEFpB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,GAAGQ,IAAX,CAAiBC,MAAM,IAAI;AACxB,UAAIA,MAAJ,EACGlB,aAAa,CAACkB,MAAD,CAAb;AACJ,KAHF;AAID,GALQ,EAKN,EALM,CAAT;AAOC;;GAxCQpB,K;;KAAAA,K;AA0CT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from './Table'\nimport Form from './Form';\nimport axios from 'axios';\n\nfunction MyApp() {\n  const [characters, setCharacters] = useState([]);\nfunction updateList(person) {\n    setCharacters([...characters, person]);\n}\n  return (\n    \n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\n      <Form handleSubmit={updateList} />\n    </div>\n  )\n  \n\nfunction removeOneCharacter (index) {\n  const updated = characters.filter((character, i) => {\n      return i !== index\n    });\n    setCharacters(updated);\n  }\n\nasync function fetchAll(){\n  try {\n    const response = await axios.get('http://localhost:5000/users');\n    return response.data.users_list;     \n  }\n  catch (error){\n    //We're not handling errors. Just logging into the console.\n    console.log(error); \n    return false;         \n  }\n }\n\nuseEffect(() => {\n  fetchAll().then( result => {\n     if (result)\n        setCharacters(result);\n   });\n}, [] );\n\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}